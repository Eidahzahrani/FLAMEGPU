<gpu:xmodel xmlns:gpu="http://www.dcs.shef.ac.uk/~paul/XMMLGPU"
xmlns="http://www.dcs.shef.ac.uk/~paul/XMML">
<name>Benchmark Model</name>
<gpu:environment>
	<gpu:functionFiles>
		<file>functions.c</file>
	</gpu:functionFiles>
	<gpu:initFunctions>
		<gpu:initFunction>
			<gpu:name>initFunction</gpu:name>
		</gpu:initFunction>
	</gpu:initFunctions>
	<gpu:stepFunctions>
		<gpu:stepFunction>
			<gpu:name>stepFunction</gpu:name>
		</gpu:stepFunction>
	</gpu:stepFunctions>
	<gpu:exitFunctions>
		<gpu:exitFunction>
			<gpu:name>exitFunction</gpu:name>
		</gpu:exitFunction>
	</gpu:exitFunctions>
</gpu:environment>
<xagents>
	<gpu:xagent>
		<name>A</name>
		<memory>
			<gpu:variable>
				<type>int</type>
				<name>closest_id</name>
			</gpu:variable>
			<gpu:variable>
				<type>float</type>
				<name>closest_point</name>
			</gpu:variable>
			<gpu:variable>
				<type>int</type>
				<name>count</name>
			</gpu:variable>
			<gpu:variable>
				<type>int</type>
				<name>id</name>
			</gpu:variable>
			<gpu:variable>
				<type>int</type>
				<name>state</name>
			</gpu:variable>
			<gpu:variable>
				<type>int</type>
				<name>type</name>
			</gpu:variable>
			<gpu:variable>
				<type>float</type>
				<name>vx</name>
			</gpu:variable>
			<gpu:variable>
				<type>float</type>
				<name>vy</name>
			</gpu:variable>
			<gpu:variable>
				<type>float</type>
				<name>vz</name>
			</gpu:variable>
			<gpu:variable>
				<type>float</type>
				<name>x</name>
			</gpu:variable>
			<gpu:variable>
				<type>float</type>
				<name>y</name>
			</gpu:variable>
			<gpu:variable>
				<type>float</type>
				<name>z</name>
			</gpu:variable>
		</memory>
		<functions>
			<gpu:function>
				<name>created_C0</name>
				<currentState>moving_A</currentState>
				<nextState>moving_A</nextState>
				<inputs>
					<gpu:input>
						<messageName>combinedB</messageName>
					</gpu:input>
				</inputs>
				<xagentOutputs>
					<gpu:xagentOutput>
						<xagentName>C</xagentName>
						<state>moving_C</state>
					</gpu:xagentOutput>
				</xagentOutputs>
				<condition>
					<lhs>
						<agentVariable>state</agentVariable>
					</lhs>
					<operator>==</operator>
					<rhs>
						<value>2</value>
					</rhs>
				</condition>
				<gpu:reallocate>false</gpu:reallocate>
				<gpu:RNG>true</gpu:RNG>
			</gpu:function>
			<gpu:function>
				<name>death_A</name>
				<currentState>moving_A</currentState>
				<nextState>deadA</nextState>
				<condition>
					<lhs>
						<agentVariable>state</agentVariable>
					</lhs>
					<operator>==</operator>
					<rhs>
						<value>6</value>
					</rhs>
				</condition>
				<gpu:reallocate>true</gpu:reallocate>
				<gpu:RNG>false</gpu:RNG>
			</gpu:function>
			<gpu:function>
				<name>move_A</name>
				<currentState>moving_A</currentState>
				<nextState>moving_A</nextState>
				<gpu:reallocate>false</gpu:reallocate>
				<gpu:RNG>true</gpu:RNG>
			</gpu:function>
			<gpu:function>
				<name>need_locationB</name>
				<currentState>moving_A</currentState>
				<nextState>moving_A</nextState>
				<inputs>
					<gpu:input>
						<messageName>locationB</messageName>
					</gpu:input>
				</inputs>
				<gpu:reallocate>false</gpu:reallocate>
				<gpu:RNG>false</gpu:RNG>
			</gpu:function>
			<gpu:function>
				<name>send_bindB</name>
				<currentState>moving_A</currentState>
				<nextState>moving_A</nextState>
				<outputs>
					<gpu:output>
						<messageName>bindB</messageName>
						<gpu:type>single_message</gpu:type>
					</gpu:output>
				</outputs>
				<condition>
					<lhs>
						<agentVariable>state</agentVariable>
					</lhs>
					<operator>==</operator>
					<rhs>
						<value>2</value>
					</rhs>
				</condition>
				<gpu:reallocate>false</gpu:reallocate>
				<gpu:RNG>false</gpu:RNG>
			</gpu:function>
		</functions>
		<states>
			<gpu:state>
				<name>deadA</name>
			</gpu:state>
			<gpu:state>
				<name>moving_A</name>
			</gpu:state>
			<initialState>moving_A</initialState>
		</states>
		<gpu:type>continuous</gpu:type>
		<gpu:bufferSize>1024</gpu:bufferSize>
	</gpu:xagent>
	<gpu:xagent>
		<name>B</name>
		<memory>
			<gpu:variable>
				<type>int</type>
				<name>closest_id</name>
			</gpu:variable>
			<gpu:variable>
				<type>float</type>
				<name>closest_point</name>
			</gpu:variable>
			<gpu:variable>
				<type>int</type>
				<name>count</name>
			</gpu:variable>
			<gpu:variable>
				<type>int</type>
				<name>id</name>
			</gpu:variable>
			<gpu:variable>
				<type>int</type>
				<name>state</name>
			</gpu:variable>
			<gpu:variable>
				<type>int</type>
				<name>type</name>
			</gpu:variable>
			<gpu:variable>
				<type>float</type>
				<name>vx</name>
			</gpu:variable>
			<gpu:variable>
				<type>float</type>
				<name>vy</name>
			</gpu:variable>
			<gpu:variable>
				<type>float</type>
				<name>vz</name>
			</gpu:variable>
			<gpu:variable>
				<type>float</type>
				<name>x</name>
			</gpu:variable>
			<gpu:variable>
				<type>float</type>
				<name>y</name>
			</gpu:variable>
			<gpu:variable>
				<type>float</type>
				<name>z</name>
			</gpu:variable>
		</memory>
		<functions>
			<gpu:function>
				<name>move_B</name>
				<currentState>moving_B</currentState>
				<nextState>moving_B</nextState>
				<gpu:reallocate>false</gpu:reallocate>
				<gpu:RNG>true</gpu:RNG>
			</gpu:function>
			<gpu:function>
				<name>receive_bindB</name>
				<currentState>moving_B</currentState>
				<nextState>moving_B</nextState>
				<inputs>
					<gpu:input>
						<messageName>bindB</messageName>
					</gpu:input>
				</inputs>
				<gpu:reallocate>false</gpu:reallocate>
				<gpu:RNG>false</gpu:RNG>
			</gpu:function>
			<gpu:function>
				<name>send_combinedB</name>
				<currentState>moving_B</currentState>
				<nextState>deadB</nextState>
				<outputs>
					<gpu:output>
						<messageName>combinedB</messageName>
						<gpu:type>single_message</gpu:type>
					</gpu:output>
				</outputs>
				<condition>
					<lhs>
						<agentVariable>state</agentVariable>
					</lhs>
					<operator>==</operator>
					<rhs>
						<value>3</value>
					</rhs>
				</condition>
				<gpu:reallocate>true</gpu:reallocate>
				<gpu:RNG>false</gpu:RNG>
			</gpu:function>
			<gpu:function>
				<name>send_locationB</name>
				<currentState>moving_B</currentState>
				<nextState>moving_B</nextState>
				<outputs>
					<gpu:output>
						<messageName>locationB</messageName>
						<gpu:type>single_message</gpu:type>
					</gpu:output>
				</outputs>
				<gpu:reallocate>false</gpu:reallocate>
				<gpu:RNG>false</gpu:RNG>
			</gpu:function>
		</functions>
		<states>
			<gpu:state>
				<name>deadB</name>
			</gpu:state>
			<gpu:state>
				<name>moving_B</name>
			</gpu:state>
			<initialState>moving_B</initialState>
		</states>
		<gpu:type>continuous</gpu:type>
		<gpu:bufferSize>1024</gpu:bufferSize>
	</gpu:xagent>
	<gpu:xagent>
		<name>C</name>
		<memory>
			<gpu:variable>
				<type>int</type>
				<name>closest_id</name>
			</gpu:variable>
			<gpu:variable>
				<type>float</type>
				<name>closest_point</name>
			</gpu:variable>
			<gpu:variable>
				<type>int</type>
				<name>count</name>
			</gpu:variable>
			<gpu:variable>
				<type>int</type>
				<name>id</name>
			</gpu:variable>
			<gpu:variable>
				<type>int</type>
				<name>state</name>
			</gpu:variable>
			<gpu:variable>
				<type>int</type>
				<name>type</name>
			</gpu:variable>
			<gpu:variable>
				<type>float</type>
				<name>vx</name>
			</gpu:variable>
			<gpu:variable>
				<type>float</type>
				<name>vy</name>
			</gpu:variable>
			<gpu:variable>
				<type>float</type>
				<name>vz</name>
			</gpu:variable>
			<gpu:variable>
				<type>float</type>
				<name>x</name>
			</gpu:variable>
			<gpu:variable>
				<type>float</type>
				<name>y</name>
			</gpu:variable>
			<gpu:variable>
				<type>float</type>
				<name>z</name>
			</gpu:variable>
		</memory>
		<functions>
			<gpu:function>
				<name>move_C</name>
				<currentState>moving_C</currentState>
				<nextState>moving_C</nextState>
				<gpu:reallocate>false</gpu:reallocate>
				<gpu:RNG>true</gpu:RNG>
			</gpu:function>
		</functions>
		<states>
			<gpu:state>
				<name>moving_C</name>
			</gpu:state>
			<initialState>moving_C</initialState>
		</states>
		<gpu:type>continuous</gpu:type>
		<gpu:bufferSize>1024</gpu:bufferSize>
	</gpu:xagent>
</xagents>
<messages>
	<gpu:message>
		<name>bindB</name>
		<variables>
			<gpu:variable>
				<type>int</type>
				<name>closest_id</name>
			</gpu:variable>
			<gpu:variable>
				<type>float</type>
				<name>closest_point</name>
			</gpu:variable>
			<gpu:variable>
				<type>int</type>
				<name>id</name>
			</gpu:variable>
			<gpu:variable>
				<type>int</type>
				<name>state</name>
			</gpu:variable>
			<gpu:variable>
				<type>int</type>
				<name>type</name>
			</gpu:variable>
			<gpu:variable>
				<type>float</type>
				<name>x</name>
			</gpu:variable>
			<gpu:variable>
				<type>float</type>
				<name>y</name>
			</gpu:variable>
			<gpu:variable>
				<type>float</type>
				<name>z</name>
			</gpu:variable>
		</variables>
		<gpu:partitioningSpatial>
			<gpu:radius>0.25</gpu:radius>
			<gpu:xmin>0.0</gpu:xmin>
			<gpu:xmax>10.0</gpu:xmax>
			<gpu:ymin>0.0</gpu:ymin>
			<gpu:ymax>10.0</gpu:ymax>
			<gpu:zmin>0.0</gpu:zmin>
			<gpu:zmax>10.0</gpu:zmax>
		</gpu:partitioningSpatial>
		<gpu:bufferSize>1024</gpu:bufferSize>
	</gpu:message>
	<gpu:message>
		<name>combinedB</name>
		<variables>
			<gpu:variable>
				<type>int</type>
				<name>closest_id</name>
			</gpu:variable>
			<gpu:variable>
				<type>float</type>
				<name>closest_point</name>
			</gpu:variable>
			<gpu:variable>
				<type>int</type>
				<name>id</name>
			</gpu:variable>
			<gpu:variable>
				<type>int</type>
				<name>state</name>
			</gpu:variable>
			<gpu:variable>
				<type>int</type>
				<name>type</name>
			</gpu:variable>
			<gpu:variable>
				<type>float</type>
				<name>x</name>
			</gpu:variable>
			<gpu:variable>
				<type>float</type>
				<name>y</name>
			</gpu:variable>
			<gpu:variable>
				<type>float</type>
				<name>z</name>
			</gpu:variable>
		</variables>
		<gpu:partitioningSpatial>
			<gpu:radius>0.25</gpu:radius>
			<gpu:xmin>0.0</gpu:xmin>
			<gpu:xmax>10.0</gpu:xmax>
			<gpu:ymin>0.0</gpu:ymin>
			<gpu:ymax>10.0</gpu:ymax>
			<gpu:zmin>0.0</gpu:zmin>
			<gpu:zmax>10.0</gpu:zmax>
		</gpu:partitioningSpatial>
		<gpu:bufferSize>1024</gpu:bufferSize>
	</gpu:message>
	<gpu:message>
		<name>locationB</name>
		<variables>
			<gpu:variable>
				<type>int</type>
				<name>closest_id</name>
			</gpu:variable>
			<gpu:variable>
				<type>float</type>
				<name>closest_point</name>
			</gpu:variable>
			<gpu:variable>
				<type>int</type>
				<name>id</name>
			</gpu:variable>
			<gpu:variable>
				<type>int</type>
				<name>state</name>
			</gpu:variable>
			<gpu:variable>
				<type>int</type>
				<name>type</name>
			</gpu:variable>
			<gpu:variable>
				<type>float</type>
				<name>x</name>
			</gpu:variable>
			<gpu:variable>
				<type>float</type>
				<name>y</name>
			</gpu:variable>
			<gpu:variable>
				<type>float</type>
				<name>z</name>
			</gpu:variable>
		</variables>
		<gpu:partitioningSpatial>
			<gpu:radius>0.25</gpu:radius>
			<gpu:xmin>0.0</gpu:xmin>
			<gpu:xmax>10.0</gpu:xmax>
			<gpu:ymin>0.0</gpu:ymin>
			<gpu:ymax>10.0</gpu:ymax>
			<gpu:zmin>0.0</gpu:zmin>
			<gpu:zmax>10.0</gpu:zmax>
		</gpu:partitioningSpatial>
		<gpu:bufferSize>1024</gpu:bufferSize>
	</gpu:message>
</messages>
<layers>
	<layer>
		<gpu:layerFunction>
			<name>move_A</name>
		</gpu:layerFunction>
		<gpu:layerFunction>
			<name>move_B</name>
		</gpu:layerFunction>
	</layer>
	<layer>
		<gpu:layerFunction>
			<name>send_locationB</name>
		</gpu:layerFunction>
	</layer>
	<layer>
		<gpu:layerFunction>
			<name>need_locationB</name>
		</gpu:layerFunction>
	</layer>
	<layer>
		<gpu:layerFunction>
			<name>send_bindB</name>
		</gpu:layerFunction>
	</layer>
	<layer>
		<gpu:layerFunction>
			<name>receive_bindB</name>
		</gpu:layerFunction>
	</layer>
	<layer>
		<gpu:layerFunction>
			<name>send_combinedB</name>
		</gpu:layerFunction>
	</layer>
	<layer>
		<gpu:layerFunction>
			<name>created_C0</name>
		</gpu:layerFunction>
	</layer>
	<layer>
		<gpu:layerFunction>
			<name>death_A</name>
		</gpu:layerFunction>
	</layer>
	<layer>
		<gpu:layerFunction>
			<name>move_C</name>
		</gpu:layerFunction>
	</layer>
</layers>
</gpu:xmodel>